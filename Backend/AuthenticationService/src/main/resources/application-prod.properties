server.port=8082
jwt.secret=${JWT_SECRET}
spring.application.name=AUTHENTICATION-SERVICE


# Postgres configurations
spring.datasource.url=${POSTGRES_DATABASE_URI}
spring.datasource.username=${POSTGRES_DATABASE_NAME}
spring.datasource.password=${POSTGRES_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver



#jpa configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.error.include-message=always

#RabbitMQ Configurations
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=5671
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=${RABBITMQ_VIRTUAL_HOST}
spring.rabbitmq.ssl.enabled=true

# JWT Token
jwttoken.message=Login Successful

# Controller Exceptions
controller.exception.message1=Id and Password Empty
controller.exception.message2=Id and Password not found
controller.exception.message3=Id and Password invalid

# Service Messages
service.message1=User Already Exists
service.message2=Invalid Id and Password

app.jwttoken.message=Login Successful
app.controller.exception.message1=Id and Password Empty
app.controller.exception.message2=Id and Password not found
app.controller.exception.message3=Id and Password invalid
app.service.message1=User Already Exists
app.service.message2=Invalid Id and Password


#eureka
#eureka.instances.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#server.service-url.defaultZone=http://localhost/8761/eureka


